import logging
import asyncio
import re
from pathlib import Path
from telegram import Update
from telegram.ext import (
    Application, 
    CommandHandler, 
    MessageHandler, 
    ContextTypes, 
    filters
)
from telegram.constants import ParseMode

from config import BOT_TOKEN, DOWNLOAD_DIR, COOKIES_FILE, MAX_FILE_SIZE
from youtube_downloader import YouTubeDownloader
from video_processor_fast import FastVideoProcessor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
downloader = YouTubeDownloader(DOWNLOAD_DIR, COOKIES_FILE)
processor = FastVideoProcessor(DOWNLOAD_DIR / 'temp')

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è YouTube URL
YOUTUBE_URL_PATTERN = re.compile(
    r'(https?://)?(www\.)?(youtube|youtu|youtube-nocookie)\.(com|be)/'
    r'(watch\?v=|embed/|v/|.+\?v=)?([^&=%\?]{11})'
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = (
        "üé• <b>YouTube Video Processor Bot</b>\n\n"
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Å–æ–∑–¥–∞—é –∫—Ä—É—Ç—ã–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ –∏–∑ YouTube —Ä–æ–ª–∏–∫–æ–≤!\n\n"
        "üöÄ <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n"
        "‚Ä¢ üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –≤ –ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ\n"
        "‚Ä¢ ‚úÇÔ∏è –ù–∞—Ä–µ–∑–∞—é –¥–ª–∏–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ 5 –º–∏–Ω—É—Ç\n"
        "‚Ä¢ üé§ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Å—É–±—Ç–∏—Ç—Ä—ã —á–µ—Ä–µ–∑ AI (Whisper)\n"
        "‚Ä¢ üì± –°–æ–∑–¥–∞—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç 9:16\n"
        "‚Ä¢ üé® –î–æ–±–∞–≤–ª—è—é —Ä–∞–∑–º—ã—Ç—ã–π —Ñ–æ–Ω\n"
        "‚Ä¢ ‚ú® –ê–Ω–∏–º–∏—Ä—É—é —Å—É–±—Ç–∏—Ç—Ä—ã –ø–æ —Å–ª–æ–≤–∞–º\n\n"
        "üìã <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ!\n\n"
        "‚öôÔ∏è <b>–ö–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å\n\n"
        "üé¨ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –∏ –Ω–∞—á–Ω–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç!"
    )
    
    await update.message.reply_text(
        welcome_text,
        parse_mode=ParseMode.HTML
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üÜò <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å</b>\n\n"
        "üìù <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:</b>\n"
        "‚Ä¢ https://www.youtube.com/watch?v=VIDEO_ID\n"
        "‚Ä¢ https://youtu.be/VIDEO_ID\n"
        "‚Ä¢ https://m.youtube.com/watch?v=VIDEO_ID\n\n"
        "üé¨ <b>–ü—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏:</b>\n"
        "1Ô∏è‚É£ <b>–°–∫–∞—á–∏–≤–∞–Ω–∏–µ</b> - –ø–æ–ª—É—á–∞—é –≤–∏–¥–µ–æ –≤ HD –∫–∞—á–µ—Å—Ç–≤–µ\n"
        "2Ô∏è‚É£ <b>–ê–Ω–∞–ª–∏–∑</b> - –ø—Ä–æ–≤–µ—Ä—è—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
        "3Ô∏è‚É£ <b>–ù–∞—Ä–µ–∑–∫–∞</b> - –¥–µ–ª—é –Ω–∞ —á–∞–Ω–∫–∏ –ø–æ 5 –º–∏–Ω—É—Ç (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)\n"
        "4Ô∏è‚É£ <b>–°—É–±—Ç–∏—Ç—Ä—ã</b> - –≥–µ–Ω–µ—Ä–∏—Ä—É—é —á–µ—Ä–µ–∑ Whisper AI\n"
        "5Ô∏è‚É£ <b>–§–æ—Ä–º–∞—Ç</b> - —Å–æ–∑–¥–∞—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ 9:16\n"
        "6Ô∏è‚É£ <b>–ê–Ω–∏–º–∞—Ü–∏—è</b> - –¥–æ–±–∞–≤–ª—è—é –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã\n\n"
        "‚ö° <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ\n"
        "‚Ä¢ –û–±—Ö–æ–¥ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é cookies\n"
        "‚Ä¢ –†–∞–∑–º—ã—Ç—ã–π —Ñ–æ–Ω –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤–∏–¥–µ–æ\n"
        "‚Ä¢ –°—É–±—Ç–∏—Ç—Ä—ã –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–æ–≤—É\n"
        "‚Ä¢ –ì–æ—Ç–æ–≤–æ –¥–ª—è TikTok, Instagram, YouTube Shorts\n\n"
        "‚ùó <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 50MB\n"
        "‚Ä¢ –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ\n"
        "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-10 –º–∏–Ω—É—Ç\n\n"
        "üîß <b>–ü—Ä–æ–±–ª–µ–º—ã?</b>\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –≤–∏–¥–µ–æ –ø–æ–∫–æ—Ä–æ—á–µ."
    )
    
    await update.message.reply_text(
        help_text,
        parse_mode=ParseMode.HTML
    )

def is_youtube_url(text: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç YouTube URL"""
    return bool(YOUTUBE_URL_PATTERN.search(text))

async def handle_youtube_url(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ YouTube —Å—Å—ã–ª–æ–∫ - —Å–∫–∞—á–∏–≤–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∏–¥–µ–æ"""
    url = update.message.text.strip()
    chat_id = update.effective_chat.id
    
    if not is_youtube_url(url):
        await update.message.reply_text(
            "‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É YouTube. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É."
        )
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    status_message = await update.message.reply_text(
        "üé¨ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ...\n"
        "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ‚Üí ‚úÇÔ∏è –ù–∞—Ä–µ–∑–∫–∞ ‚Üí üé§ –°—É–±—Ç–∏—Ç—Ä—ã ‚Üí üì± –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n\n"
        "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
    )
    
    try:
        # –≠—Ç–∞–ø 1: –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        await status_message.edit_text(
            "üì• <b>–≠—Ç–∞–ø 1/4:</b> –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ...\n"
            "‚è≥ –ü–æ–ª—É—á–∞—é –≤–∏–¥–µ–æ –≤ –ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ",
            parse_mode=ParseMode.HTML
        )
        
        file_path = await downloader.download_video(url, chat_id)
        
        if not file_path:
            await status_message.edit_text(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ."
            )
            return
        
        # –≠—Ç–∞–ø 2: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ (–Ω–∞—Ä–µ–∑–∫–∞, —Å—É–±—Ç–∏—Ç—Ä—ã, –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
        await status_message.edit_text(
            "üéûÔ∏è <b>–≠—Ç–∞–ø 2/4:</b> –ê–Ω–∞–ª–∏–∑ –∏ –Ω–∞—Ä–µ–∑–∫–∞ –≤–∏–¥–µ–æ...\n"
            "‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞—Ä–µ–∑–∞—é –Ω–∞ —á–∞–Ω–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏",
            parse_mode=ParseMode.HTML
        )
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processed_videos = await processor.process_video(file_path, chat_id)
        
        if not processed_videos:
            await status_message.edit_text(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ."
            )
            downloader.cleanup_file(file_path)
            return
        
        # –≠—Ç–∞–ø 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ
        await status_message.edit_text(
            f"üì§ <b>–≠—Ç–∞–ø 4/4:</b> –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ...\n"
            f"‚ú® –°–æ–∑–¥–∞–Ω–æ {len(processed_videos)} –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∏–¥–µ–æ —Å —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏",
            parse_mode=ParseMode.HTML
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ
        for i, processed_video in enumerate(processed_videos):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            file_size = processor.get_file_size(processed_video)
            
            if file_size > MAX_FILE_SIZE:
                await context.bot.send_message(
                    chat_id=chat_id,
                    text=f"‚ö†Ô∏è –í–∏–¥–µ–æ {i+1} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ ({file_size / (1024*1024):.1f} MB) –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram"
                )
                continue
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
            with open(processed_video, 'rb') as video_file:
                caption = f"‚úÖ –ì–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ {i+1}/{len(processed_videos)}\n"
                caption += "üé¨ –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç 9:16\n"
                caption += "üé§ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—É–±—Ç–∏—Ç—Ä—ã\n"
                caption += "üé® –†–∞–∑–º—ã—Ç—ã–π —Ñ–æ–Ω"
                
                await context.bot.send_video(
                    chat_id=chat_id,
                    video=video_file,
                    caption=caption,
                    supports_streaming=True
                )
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
        await status_message.delete()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        final_message = f"üéâ <b>–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\n"
        final_message += f"üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>\n"
        final_message += f"‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –≤–∏–¥–µ–æ: {len(processed_videos)}\n"
        final_message += f"‚Ä¢ –§–æ—Ä–º–∞—Ç: 9:16 (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π)\n"
        final_message += f"‚Ä¢ –°—É–±—Ç–∏—Ç—Ä—ã: –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ —Å–ª–æ–≤–∞–º\n"
        final_message += f"‚Ä¢ –§–æ–Ω: –†–∞–∑–º—ã—Ç—ã–π –æ—Ä–∏–≥–∏–Ω–∞–ª\n\n"
        final_message += f"üöÄ –ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö!"
        
        await context.bot.send_message(
            chat_id=chat_id,
            text=final_message,
            parse_mode=ParseMode.HTML
        )
        
        # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã
        downloader.cleanup_file(file_path)
        processor.cleanup_temp_files(chat_id)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ: {e}")
        await status_message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n"
            f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {str(e)[:100]}..."
        )
        
        # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª—ã –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        try:
            if 'file_path' in locals():
                downloader.cleanup_file(file_path)
            processor.cleanup_temp_files(chat_id)
        except:
            pass

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    text = update.message.text
    
    if is_youtube_url(text):
        await handle_youtube_url(update, context)
    else:
        await update.message.reply_text(
            "ü§î –Ø —É–º–µ—é –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ —Å YouTube.\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä—É—Ç–æ–≥–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞!"
        )

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    if BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω BOT_TOKEN!")
        print("–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN")
        print("–ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ config.py")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üöÄ YouTube Video Processor Bot –∑–∞–ø—É—â–µ–Ω!")
    print("üì± –ì–æ—Ç–æ–≤ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Å—É–±—Ç–∏—Ç—Ä–∞–º–∏!")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()